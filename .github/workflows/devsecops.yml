name: DevSecOps Security Scans

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  security:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Ruby & Install Jekyll
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
    - run: |
        gem install bundler jekyll
        bundle install
        bundle exec jekyll build

    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    - name: Trivy Scan
      run: |
          echo "Installing Trivy..."
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y
          echo "Running Trivy scan..."
          trivy fs . 

    - name: Snyk Scan
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: |
        echo "Installing Snyk..."
        npm install -g snyk

        echo "Authenticating Snyk..."
        snyk auth "${SNYK_TOKEN}"

          
        echo "Running Snyk test..."
        snyk test --all-projects

        echo "RMonitoring project with Snyk..."
        snyk monitor --all-projects

    - name: OWASP Dependency Check
      run: |
        echo "Downloading and installing OWASP Dependency-Check..."
        wget https://github.com/jeremylong/DependencyCheck/releases/download/v12.1.0/dependency-check-12.1.0-release.zip
        unzip dependency-check-12.1.0-release.zip
        echo "Running OWASP Dependency-Check scan..."
        cd dependency-check/bin
        ./dependency-check.sh --scan ../.. --format ALL --nvdApiKey "${{ secrets.NVD_API_KEY }}"
        
    - name: Verify Docker Hub login
      run: docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_TOKEN }}"
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} 
          password: ${{ secrets.DOCKERHUB_TOKEN }}  
    - name: Docker build and push
      run: |
            # Run commands to build and push docker images
            docker build -t finwise .
            docker tag finwise "${{ secrets.DOCKERHUB_USERNAME }}/demo:latest"
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            docker push "${{ secrets.DOCKERHUB_USERNAME }}/demo:latest"
      env:
        DOCKER_CLI_ACI: 1
  deploy:
      name: Deploy App
      needs: [security]
      if: ${{ success() }}
      runs-on: ubuntu-latest
      steps:
      - name: Checkout repo for Vercel deployment
        uses: actions/checkout@v2
      - name: Pull the docker image
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/demo:latest

      - name: Trivy image scan
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y
          trivy image ${{ secrets.DOCKERHUB_USERNAME }}/demo:latest

      - name: Install Vercel CLI
        run: npm install -g vercel
      - name: Deploy to Vercel
        run: vercel --prod --yes --token=${{ secrets.VERCEL_TOKEN }} --name=devops-project